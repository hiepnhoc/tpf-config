server:
  port: 9000
spring:
  cloud:
    config:
      allow-override: true
      override-none: true
  rabbitmq:
    host: localhost
    port: 5672
    username: tpf-service-zuul
    password: tpf-service-zuul
    app-id: tpf-service-zuul
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
zuul:
  host:
    connect-timeout-millis: 60000
    socket-timeout-millis: 60000
  routes:
    tpf_service_authentication:
      path: /api/auth/**
      sensitiveHeaders:
      serviceId: TPF-SERVICE-AUTHENTICATION
    tpf_service_restclient:
      path: /api/**
      sensitiveHeaders:
      serviceId: TPF-SERVICE-RESTCLIENT
  add-proxy-headers: true

ribbon:
  ReadTimeout: 6000
  ConnectTimeout: 60000
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 2000000
logging:
  level:
    com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver: WARN
---
spring:
  profiles: dev
  cloud:
    config:
      allow-override: false
      override-none: false
  rabbitmq:
    host: tpf-opensource-rabbitmq
eureka:
  client:
    serviceUrl:
      defaultZone: http://tpf-service-eureka:8761/eureka
  instance:
    hostname: tpf-service-zuul
---
spring:
  profiles: uat
  cloud:
    config:
      allow-override: false
      override-none: false
  rabbitmq:
    host: tpf-opensource-rabbitmq
eureka:
  client:
    serviceUrl:
      defaultZone: http://tpf-service-eureka:8761/eureka
  instance:
    hostname: tpf-service-zuul
---
spring:
  profiles: pro
  cloud:
    config:
      allow-override: false
      override-none: false
  rabbitmq:
    host: tpf-opensource-rabbitmq
eureka:
  client:
    serviceUrl:
      defaultZone: http://tpf-service-eureka:8761/eureka
  instance:
    hostname: tpf-service-zuul
